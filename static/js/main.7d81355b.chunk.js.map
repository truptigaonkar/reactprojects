{"version":3,"sources":["components/config.jsx","components/Media.jsx","components/Weather.jsx","components/Recipes.jsx","components/Githubusers/Userlist.jsx","components/Githubusers/Usersearch.jsx","components/prisjaktproduct/Productlist.jsx","components/prisjaktproduct/Productsearch.jsx","App.jsx","serviceWorker.js","index.js","components/prisjaktproduct/Productsearch.module.css","components/prisjaktproduct/Productlist.module.css"],"names":["GITHUBUSERS_URL","WEATHER_URL","MEDIA_URL","PRISJAKTPRODUCT_URL","WEATHER_APIKEY","MEDIA_APIKEY","Media","props","getMedia","e","preventDefault","media","target","elements","value","state","axios","get","then","response","setState","medias","data","hits","reset","selectChange","this","onSubmit","TextField","id","label","name","placeholder","FormControl","InputLabel","Select","labelId","onChange","MenuItem","Button","style","margin","type","variant","color","disableElevation","display","justifyContent","flexWrap","map","className","key","src","previewURL","alt","width","height","tags","AppBar","position","top","bottom","Link","href","videos","url","small","playing","Component","Weather","getWeather","city","country","sys","temp","main","tempMin","temp_min","tempMax","temp_max","description","weather","icon","errorMessage","cardShow","catch","error","status","setTimeout","Fab","aria-label","Card","CardHeader","title","subheader","CardContent","Typography","gutterBottom","component","Recipes","getRecipe","ingredient","recipes","results","recipe","rel","thumbnail","ingredients","Userlist","avatarUrl","login","location","htmlUrl","publicRepos","followers","CardActionArea","CardMedia","image","CardActions","Usersearch","getUser","avatar_url","html_url","public_repos","Paper","Productlist","products","product","Style","card","cardBox","card__content","_source","card__image","product_images","first","card__title","card__percentage","price","diff_percentage","offer","displayType","thousandSeparator","suffix","Productsearch","getProduct","productToSearch","post","res","console","log","alertShow","Helmet","message","alert","alertWarning","form","form__field","htmlFor","form__label","App","basename","process","Toolbar","IconButton","edge","to","exact","path","Githubusers","Prisjaktproduct","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.7d81355b.chunk.js","sourcesContent":["export const GITHUBUSERS_URL = \"https://api.github.com/users/\";\r\nexport const WEATHER_URL = \"https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather\"\r\nexport const MEDIA_URL = \"https://pixabay.com/api/\";\r\nexport const PRISJAKTPRODUCT_URL = \"https://search-pj-campaigns-dykc3wbnqz22xvoiwp2ta5bk3m.eu-west-1.es.amazonaws.com/campaign-*-4-deals/_search\";\r\n\r\n\r\nexport const WEATHER_APIKEY = '83cffc88a9642dc06aaa70ad82059627';\r\nexport const MEDIA_APIKEY = '14482129-f8f3796c1975d4841314c1735';\r\n\r\n\r\n\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ReactPlayer from 'react-player';\r\nimport {\r\n  TextField, FormControl, InputLabel, Select, MenuItem, Button, AppBar, Link,\r\n} from '@material-ui/core';\r\nimport { MEDIA_URL } from '../components/config.jsx';\r\nimport { MEDIA_APIKEY } from '../components/config.jsx';\r\n\r\nclass Media extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { medias: [], value: 'image' };\r\n  }\r\n\r\n    getMedia = (e) => {\r\n      e.preventDefault();\r\n      const media = e.target.elements.media.value;\r\n      const { value } = this.state;\r\n      if (media) { // empty input\r\n        if (value === 'image') {\r\n          axios.get(`${MEDIA_URL}?key=${MEDIA_APIKEY}&q=${media}&image_type=photo&pretty=true`)\r\n            .then((response) => {\r\n              this.setState({\r\n                medias: response.data.hits, // images\r\n                // value: 'image'\r\n              });\r\n            });\r\n        } else if (value === 'video') {\r\n          axios.get(`${MEDIA_URL}videos/?key=${MEDIA_APIKEY}&q=${media}&pretty=true`)\r\n            .then((response) => {\r\n              this.setState({\r\n                medias: response.data.hits, // videos\r\n                // value: 'image'\r\n              });\r\n            });\r\n        }\r\n      }\r\n      e.target.reset(); // making input empty\r\n    }\r\n\r\n    selectChange = (e) => {\r\n      this.setState({ value: e.target.value });\r\n    }\r\n\r\n    render() {\r\n      const { value } = this.state;\r\n      const { medias } = this.state;\r\n\r\n      if (value === 'image') {\r\n        return (\r\n          <>\r\n            <form onSubmit={this.getMedia}>\r\n              <TextField id=\"standard-basic\" label=\"media\" name=\"media\" placeholder=\"e.g. cat\" />\r\n&nbsp;&nbsp;\r\n              <FormControl>\r\n                <InputLabel id=\"demo-simple-select-label\" />\r\n                <Select\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={value}\r\n                  onChange={this.selectChange}\r\n                >\r\n                  <MenuItem value=\"image\">Image</MenuItem>\r\n                  <MenuItem value=\"video\">Video</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n&nbsp;\r\n              <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\r\n  GET MEDIA\r\n              </Button>\r\n            </form>\r\n            <div style={{ display: 'flex', justifyContent: 'space-center', flexWrap: 'wrap' }}>\r\n              {medias.map((media) => (\r\n                <div className=\"card\" key={media.id}>\r\n                  <div><img src={media.previewURL} alt=\"url\" style={{ width: '100%', height: '100%' }} /></div>\r\n                  <div>{media.tags}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <br />\r\n            <br />\r\n            <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\r\n              <Button color=\"primary\">\r\n                <Link href=\"https://pixabay.com/api/docs/\" color=\"inherit\">\r\n                  <b>Pixabay API</b>\r\n: https://pixabay.com/api/docs/\r\n                </Link>\r\n              </Button>\r\n            </AppBar>\r\n          </>\r\n        );\r\n      }\r\n      return (\r\n        <>\r\n          <h3>Media CARD</h3>\r\n          <form onSubmit={this.getMedia}>\r\n            <TextField id=\"standard-basic\" label=\"media\" name=\"media\" placeholder=\"e.g. cat\" />\r\n&nbsp;&nbsp;\r\n            <FormControl>\r\n              <InputLabel id=\"demo-simple-select-label\" />\r\n              <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"demo-simple-select\"\r\n                value={value}\r\n                onChange={this.selectChange}\r\n              >\r\n                <MenuItem value=\"image\">Image</MenuItem>\r\n                <MenuItem value=\"video\">Video</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n&nbsp;\r\n            <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\r\n  GET MEDIA\r\n            </Button>\r\n          </form>\r\n          <div style={{ display: 'flex', justifyContent: 'space-center', flexWrap: 'wrap' }}>\r\n            {medias.map((media) => (\r\n              <div className=\"card\" key={media.id}>\r\n                { media.videos && (\r\n                <div>\r\n                  <ReactPlayer\r\n                    url={media.videos.small.url}\r\n                    className=\"react-player\"\r\n                    playing\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                  />\r\n                </div>\r\n                ) }\r\n                <div>{media.tags}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\r\n            <Button color=\"primary\">\r\n              <Link href=\"https://pixabay.com/api/docs/\" color=\"inherit\">\r\n                <b>Pixabay API</b>\r\n: https://pixabay.com/api/docs/\r\n              </Link>\r\n            </Button>\r\n          </AppBar>\r\n        </>\r\n      );\r\n    }\r\n}\r\nexport default Media;\r\n","/* eslint-disable react/jsx-indent */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  TextField, Fab, Card, CardHeader, CardContent, Typography, AppBar, Button, Link,\r\n} from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { WEATHER_URL, WEATHER_APIKEY } from './config.jsx';\r\n\r\nclass Weather extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { errorMessage: false, cardShow: false };\r\n  }\r\n\r\n  // Disappear error message after 3000sec.\r\n  componentDidUpdate() {\r\n    setTimeout(() => this.setState({ errorMessage: '' }), 3000);\r\n  }\r\n\r\n    getWeather = (e) => {\r\n      e.preventDefault();\r\n      const city = e.target.elements.city.value;\r\n      const country = e.target.elements.country.value;\r\n\r\n      axios.get(`${WEATHER_URL}?q=${city},${country}&appid=${WEATHER_APIKEY}&units=metric`)\r\n        .then((response) => {\r\n          if (city && country) {\r\n            this.setState({\r\n              // weather: response.data,\r\n              city: response.data.name,\r\n              country: response.data.sys.country,\r\n              temp: response.data.main.temp,\r\n              tempMin: response.data.main.temp_min,\r\n              tempMax: response.data.main.temp_max,\r\n              description: response.data.weather[0].description,\r\n              icon: response.data.weather[0].icon,\r\n              errorMessage: false,\r\n              cardShow: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              errorMessage: true,\r\n              cardShow: false,\r\n            });\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 404) {\r\n            this.setState({\r\n              errorMessage:\r\n                            'Weather with the supplied city and country does not exist. Please enter valid city and country',\r\n            });\r\n          } else if (error.response.status === 401) {\r\n            this.setState({\r\n              errorMessage:\r\n                            'Unauthorized user. Please provide valid API_KEY.',\r\n            });\r\n          }\r\n        });\r\n      e.target.reset(); // making input empty\r\n    }\r\n\r\n    render() {\r\n      const { errorMessage } = this.state;\r\n      const { cardShow } = this.state;\r\n      const { city } = this.state;\r\n      const { country } = this.state;\r\n      const { description } = this.state;\r\n      const { temp } = this.state;\r\n      const { tempMin } = this.state;\r\n      const { tempMax } = this.state;\r\n      const { icon } = this.state;\r\n      return (\r\n        <>\r\n        <br />\r\n          <form onSubmit={this.getWeather}>\r\n            <TextField id=\"filled-basic\" label=\"city\" variant=\"filled\" name=\"city\" placeholder=\"e.g. London\" />\r\n            {' '}\r\n            <TextField id=\"filled-basic\" label=\"country\" variant=\"filled\" name=\"country\" placeholder=\"e.g. UK\" />\r\n            {' '}\r\n            <Fab type=\"submit\" color=\"primary\" aria-label=\"add\"><AddIcon /></Fab>\r\n          </form>\r\n          <br />\r\n          <div className=\"warning\">{errorMessage}</div>\r\n          <br />\r\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {cardShow\r\n                    && (\r\n                    <div>\r\n                      <Card style={{\r\n                        width: 300,\r\n                      }}\r\n                      >\r\n                        <CardHeader\r\n                          title={city}\r\n                          subheader={country}\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            <img src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"wthr img\" width=\"200px\" />\r\n                          </Typography>\r\n                          <b>{description}</b>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            <p>\r\n                              <b>Temperature: </b>\r\n                              {temp}\r\n                            </p>\r\n                            <p>\r\n                              <b>MIN Temperature: </b>\r\n                              {tempMin}\r\n                            </p>\r\n                            <p>\r\n                              <b>MAX Temperature: </b>\r\n                              {tempMax}\r\n                            </p>\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </div>\r\n                    )}\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\r\n            <Button color=\"primary\">\r\n              <Link href=\"https://openweathermap.org/api\" color=\"inherit\">\r\n                <b>Weather API</b>\r\n: https://openweathermap.org/api\r\n              </Link>\r\n            </Button>\r\n          </AppBar>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Weather;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Helmet from 'react-helmet';\r\nimport {\r\n  TextField, AppBar, Button, Link,\r\n} from '@material-ui/core';\r\n\r\nexport default class Recipes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { recipes: [] };\r\n  }\r\n\r\n  // http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=3\r\n  getRecipe = (e) => {\r\n    e.preventDefault();\r\n    const ingredient = e.target.elements.ingredient.value;\r\n    if (ingredient) {\r\n      axios\r\n        .get(\r\n          `https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api/?i=${ingredient}`,\r\n        ) // https://cors-anywhere.herokuapp.com/ is used to remove error Cross-Origin Read Blocking (CORB)\r\n        .then((response) => {\r\n          this.setState({\r\n            recipes: response.data.results,\r\n          });\r\n        });\r\n    }\r\n    e.target.reset(); // making input empty\r\n  };\r\n\r\n  render() {\r\n    const { recipes } = this.state;\r\n    return (\r\n      <>\r\n        <Helmet><title>Recipe</title></Helmet>\r\n        <form onSubmit={this.getRecipe}>\r\n          <TextField id=\"standard-basic\" name=\"ingredient\" label=\"Ingredient\" placeholder=\"e.g.fish\" />\r\n          <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\r\n  GET RECIPE\r\n          </Button>\r\n        </form>\r\n        <div style={{ display: 'flex', justifyContent: 'space-center', flexWrap: 'wrap' }}>\r\n          {recipes.map((recipe) => (\r\n            <div className=\"card\" key={recipe.id}>\r\n              <div><a href={`${recipe.href}`} rel=\"noopener noreferrer\"><img src={recipe.thumbnail} alt=\"recipe\" style={{ width: '100%', height: '100%' }} /></a></div>\r\n              <div><a href={`${recipe.href}`} rel=\"noopener noreferrer\">{recipe.title}</a></div>\r\n              <div>{recipe.ingredients}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\r\n          <Button color=\"primary\">\r\n            <Link href=\"http://www.recipepuppy.com/about/api/\" color=\"inherit\">\r\n              <b>Recipe Puppy API</b>\r\n               : http://www.recipepuppy.com/about/api/\r\n            </Link>\r\n          </Button>\r\n        </AppBar>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {\r\n    Typography, Card, CardActionArea, CardActions, CardContent, CardMedia\r\n  } from '@material-ui/core';\r\n\r\nconst Userlist = props => {\r\n    const { cardShow } = props;\r\n    const { avatarUrl } = props;\r\n    const { login } = props;\r\n    const { name } = props;\r\n    const { location } = props;\r\n    const { htmlUrl } = props;\r\n    const { publicRepos } = props;\r\n    const { followers } = props;\r\n    return (\r\n        <div>\r\n        <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            {cardShow\r\n                    && (\r\n                    <Card style={{\r\n                      width: 300,\r\n                    }}\r\n                    >\r\n                      <CardActionArea>\r\n                        <CardMedia\r\n                          style={{ height: 300 }}\r\n                          image={avatarUrl}\r\n                        />\r\n                        <CardContent>\r\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {login}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            <div>\r\n                              <b>Name:</b>\r\n                              {name}\r\n                            </div>\r\n                            <div>\r\n                              <b>Location:</b>\r\n                              {' '}\r\n                              {location}\r\n                            </div>\r\n                            <div>\r\n                              <b>GitHhb url:</b>\r\n                              <a href={`${htmlUrl}`} rel=\"noopener noreferrer\">\r\n                                {' '}\r\n                                {/* use noopener noreferrer for target=\"_blank\" */}\r\n                                {htmlUrl}\r\n                              </a>\r\n                            </div>\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </CardActionArea>\r\n                      <CardActions>\r\n                        <b>Repositories: </b>\r\n                        {publicRepos}\r\n                        <b>Followers: </b>\r\n                        {' '}\r\n                        {followers}\r\n                      </CardActions>\r\n                    </Card>\r\n                    )}\r\n          </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Userlist;","/* eslint-disable max-len */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Helmet from 'react-helmet';\r\nimport {\r\n  TextField, Paper, Typography, AppBar, Button, Link\r\n} from '@material-ui/core';\r\nimport { GITHUBUSERS_URL } from '../config.jsx';\r\nimport Userlist from './Userlist.jsx';\r\n\r\nclass Usersearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { errorMessage: false, cardShow: false };\r\n  }\r\n\r\n  // Disappear error message after 2000sec.\r\n  componentDidUpdate() {\r\n    setTimeout(() => this.setState({ errorMessage: '' }), 2000);\r\n  }\r\n\r\n    // Form button function\r\n    // getUser(e) {\r\n    getUser = (e) => {\r\n      e.preventDefault();\r\n      const login = e.target.elements.login.value;\r\n      axios\r\n        .get(\r\n          `${GITHUBUSERS_URL}${login}`,\r\n        )\r\n        .then((response) => {\r\n          if (login) {\r\n            this.setState({\r\n              // users: response.data,\r\n              login: response.data.login, // showing login on webpage\r\n              name: response.data.name, // showing name on webpage,\r\n              avatarUrl: response.data.avatar_url,\r\n              htmlUrl: response.data.html_url,\r\n              publicRepos: response.data.public_repos,\r\n              location: response.data.location,\r\n              followers: response.data.followers,\r\n              errorMessage: false,\r\n              cardShow: true,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              errorMessage: true,\r\n            });\r\n          }\r\n        })\r\n        .catch(() => {\r\n          this.setState({\r\n            errorMessage:\r\n                        'Username does not exist. Please enter valid username',\r\n          });\r\n        });\r\n      e.target.reset(); // making input empty\r\n    };\r\n\r\n    render() {\r\n      const { errorMessage } = this.state;\r\n      const { cardShow } = this.state;\r\n      const { avatarUrl } = this.state;\r\n      const { login } = this.state;\r\n      const { name } = this.state;\r\n      const { location } = this.state;\r\n      const { htmlUrl } = this.state;\r\n      const { publicRepos } = this.state;\r\n      const { followers } = this.state;\r\n\r\n      return (\r\n        <>\r\n          <Helmet><title>Githubusers</title></Helmet>\r\n          <br />\r\n          {/* <form onSubmit={this.getUser.bind(this)}> */}\r\n          <form onSubmit={this.getUser}>\r\n            <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"login\" label=\"GitHub Username\" placeholder=\"e.g. mojombo\" />\r\n            <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\r\n  GET USER\r\n              </Button>\r\n            {/* Displaying error messages */}\r\n            <Paper>\r\n              <Typography variant=\"h6\">\r\n                {errorMessage}\r\n              </Typography>\r\n            </Paper>\r\n          </form>\r\n          <br />\r\n          <Userlist cardShow={cardShow} avatarUrl={avatarUrl} login={login} name={name} location={location} htmlUrl={htmlUrl} publicRepos={publicRepos} followers={followers} />\r\n          <br />\r\n          <br />\r\n          <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\r\n            <Button color=\"primary\">\r\n              <Link href=\"https://developer.github.com/v3/\" color=\"inherit\">\r\n                <b>GitHub users API</b>\r\n: https://developer.github.com/v3/\r\n              </Link>\r\n            </Button>\r\n          </AppBar>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Usersearch;\r\n","import React from \"react\";\r\nimport NumberFormat from \"react-number-format\";\r\nimport Style from \"./Productlist.module.css\";\r\n\r\nconst Productlist = props => {\r\n  const { products } = props;\r\n  return (\r\n    <div>\r\n      {products ? (\r\n        products.map(product => (\r\n          <div className={`${Style.card} ${Style.cardBox}`}>\r\n            <div className={Style.card__content} key={product._source.id}>\r\n              <div className={Style.card__image}>\r\n                {product._source.product.media.product_images ? (\r\n                  <img\r\n                    src={\r\n                      product._source.product.media.product_images.first[140]\r\n                    }\r\n                    alt=\"product\"\r\n                  />\r\n                ) : null}\r\n              </div>\r\n              <div className={Style.card__title}>\r\n                {product._source && <div>{product._source.product.name}</div>}\r\n              </div>\r\n              <div className={Style.card__percentage}>\r\n                <b>Dropped Percentage:</b>{\" \"}\r\n                {product._source.price.diff_percentage}\r\n                <br />\r\n                <b>Formatted Price: </b>\r\n                <NumberFormat\r\n                  value={product._source.price.offer}\r\n                  displayType={\"text\"}\r\n                  thousandSeparator={true}\r\n                  suffix={\"kr\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <h1>no results</h1>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Productlist;","import React, { Component } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport axios from 'axios';\r\nimport Style from './Productsearch.module.css';\r\nimport { PRISJAKTPRODUCT_URL } from '../config.jsx';\r\nimport Productlist from './Productlist.jsx';\r\n\r\nclass Productsearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errorMessage: '',\r\n      products: [],\r\n      alertShow: false,\r\n    };\r\n  }\r\n\r\n  getProduct = (e) => {\r\n    e.preventDefault();\r\n    const productToSearch = e.target.elements.product.value;\r\n    axios\r\n      .post(`${PRISJAKTPRODUCT_URL}?q=product.name:${productToSearch}`)\r\n      .then((res) => {\r\n        console.log(res.status);\r\n        this.setState({\r\n          products: res.data.hits.hits,\r\n          alertShow: false,\r\n        });\r\n        if (res.status === 200) {\r\n          this.setState({ errorMessage: 'Empty array' });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('new', error);\r\n        if (error.response.status === 400) {\r\n          this.setState({\r\n            errorMessage: 'Please fill in the Product Name',\r\n            alertShow: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            errorMessage: 'Something went wrong',\r\n            alertShow: true,\r\n          });\r\n        }\r\n      });\r\n    e.target.reset(); // making input empty\r\n  };\r\n\r\n  render() {\r\n    const { alertShow } = this.state;\r\n    const { errorMessage } = this.state;\r\n    const { products } = this.state;\r\n    if (products === null) {\r\n      return <p>Fetching product...</p>;\r\n    }\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>Product Search</title>\r\n        </Helmet>\r\n        <div className={Style.message}>\r\n          {alertShow && (\r\n            <div className={`${Style.alert} ${Style.alertWarning}`}>\r\n              <span>Warning! </span>\r\n              {errorMessage}\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className={Style.form}>\r\n          <form onSubmit={this.getProduct}>\r\n            <input\r\n              type=\"text\"\r\n              id=\"product\"\r\n              className={Style.form__field}\r\n              placeholder=\"Search product here....\"\r\n            />\r\n            <label htmlFor=\"product\" className={Style.form__label}>\r\n              Search product here....\r\n            </label>\r\n          </form>\r\n        </div>\r\n        <Productlist products={products} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Productsearch;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport {\r\n  AppBar, Toolbar, IconButton, Button, Typography,\r\n} from '@material-ui/core';\r\nimport Media from './components/Media';\r\nimport Weather from './components/Weather';\r\nimport Recipes from './components/Recipes';\r\nimport Githubusers from './components/Githubusers/Usersearch.jsx';\r\nimport Prisjaktproduct from './components/prisjaktproduct/Productsearch.jsx';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <AppBar position=\"static\">\r\n        <Typography variant=\"h5\" color=\"secondary\">\r\n            API CARDS\r\n            </Typography>\r\n          <Toolbar style={{ display: 'flex', justifyContent: 'center' }}>\r\n            \r\n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\r\n            <Button color=\"inherit\" component={Link} to=\"/\">GitHub-User</Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/recipes\">Recipes</Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/weather\">Weather</Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/media\">Media</Button>\r\n            <Button color=\"inherit\" component={Link} to=\"/prisjaktproduct\">Prisjakt-Product</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Route exact path=\"/\" component={Githubusers} />\r\n        <Route exact path=\"/recipes\" component={Recipes} />\r\n        <Route exact path=\"/weather\" component={Weather} />\r\n        <Route exact path=\"/media\" component={Media} />\r\n        <Route exact path=\"/prisjaktproduct\" component={Prisjaktproduct} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Productsearch_form__1ajZN\",\"form__field\":\"Productsearch_form__field__EHFVl\",\"form__label\":\"Productsearch_form__label__21y-p\",\"alert\":\"Productsearch_alert__eggLz\",\"alertWarning\":\"Productsearch_alertWarning__18O0q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Productlist_card__3yLw1\",\"cardBox\":\"Productlist_cardBox__2ZNF3\",\"card__image\":\"Productlist_card__image__2Qtba\",\"card__content\":\"Productlist_card__content__3pXzh\",\"card__title\":\"Productlist_card__title__1_Rkl\"};"],"sourceRoot":""}