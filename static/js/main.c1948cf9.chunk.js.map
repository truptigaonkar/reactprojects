{"version":3,"sources":["components/Media.jsx","components/Weather.jsx","components/Recipes.jsx","components/Githubusers.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API_KEY","process","Media","props","getMedia","e","preventDefault","media","target","elements","value","state","axios","get","then","response","setState","medias","data","hits","reset","selectChange","this","onSubmit","TextField","id","label","name","placeholder","FormControl","InputLabel","Select","labelId","onChange","MenuItem","Button","style","margin","type","variant","color","disableElevation","display","justifyContent","flexWrap","map","className","key","src","previewURL","alt","width","height","tags","AppBar","position","top","bottom","Link","href","videos","url","small","playing","Component","Weather","getWeather","city","country","sys","temp","main","tempMin","temp_min","tempMax","temp_max","description","weather","icon","errorMessage","cardShow","catch","error","status","setTimeout","Fab","aria-label","Card","CardHeader","title","subheader","CardContent","Typography","gutterBottom","component","Recipes","getRecipe","ingredient","recipes","results","recipe","rel","thumbnail","ingredients","githubusers","getUser","login","avatarUrl","avatar_url","htmlUrl","html_url","publicRepos","public_repos","location","followers","Paper","CardActionArea","CardMedia","image","CardActions","App","basename","Toolbar","IconButton","edge","to","exact","path","Githubusers","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c1948cf9.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactPlayer from 'react-player';\nimport {\n  TextField, FormControl, InputLabel, Select, MenuItem, Button, AppBar, Link,\n} from '@material-ui/core';\n\nconst API_KEY = `${process.env.REACT_APP_API_KEY1}`;\n\nclass Media extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { medias: [], value: 'image' };\n  }\n\n    getMedia = (e) => {\n      e.preventDefault();\n      const media = e.target.elements.media.value;\n      const { value } = this.state;\n      if (media) { // empty input\n        if (value === 'image') {\n          axios.get(`https://pixabay.com/api/?key=${API_KEY}&q=${media}&image_type=photo&pretty=true`)\n            .then((response) => {\n              this.setState({\n                medias: response.data.hits, // images\n                // value: 'image'\n              });\n            });\n        } else if (value === 'video') {\n          axios.get(`https://pixabay.com/api/videos/?key=${API_KEY}&q=${media}&pretty=true`)\n            .then((response) => {\n              this.setState({\n                medias: response.data.hits, // videos\n                // value: 'image'\n              });\n            });\n        }\n      }\n      e.target.reset(); // making input empty\n    }\n\n    selectChange = (e) => {\n      this.setState({ value: e.target.value });\n    }\n\n    render() {\n      const { value } = this.state;\n      const { medias } = this.state;\n\n      if (value === 'image') {\n        return (\n          <>\n            <form onSubmit={this.getMedia}>\n              <TextField id=\"standard-basic\" label=\"media\" name=\"media\" placeholder=\"e.g. cat\" />\n&nbsp;&nbsp;\n              <FormControl>\n                <InputLabel id=\"demo-simple-select-label\" />\n                <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={value}\n                  onChange={this.selectChange}\n                >\n                  <MenuItem value=\"image\">Image</MenuItem>\n                  <MenuItem value=\"video\">Video</MenuItem>\n                </Select>\n              </FormControl>\n&nbsp;\n              <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\n  GET MEDIA\n              </Button>\n            </form>\n            <div style={{ display: 'flex', justifyContent: 'space-center', flexWrap: 'wrap' }}>\n              {medias.map((media) => (\n                <div className=\"card\" key={media.id}>\n                  <div><img src={media.previewURL} alt=\"url\" style={{ width: '100%', height: '100%' }} /></div>\n                  <div>{media.tags}</div>\n                </div>\n              ))}\n            </div>\n            <br />\n            <br />\n            <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\n              <Button color=\"primary\">\n                <Link href=\"https://pixabay.com/api/docs/\" color=\"inherit\">\n                  <b>Pixabay API</b>\n: https://pixabay.com/api/docs/\n                </Link>\n              </Button>\n            </AppBar>\n          </>\n        );\n      }\n      return (\n        <>\n          <h3>Media CARD</h3>\n          <form onSubmit={this.getMedia}>\n            <TextField id=\"standard-basic\" label=\"media\" name=\"media\" placeholder=\"e.g. cat\" />\n&nbsp;&nbsp;\n            <FormControl>\n              <InputLabel id=\"demo-simple-select-label\" />\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={value}\n                onChange={this.selectChange}\n              >\n                <MenuItem value=\"image\">Image</MenuItem>\n                <MenuItem value=\"video\">Video</MenuItem>\n              </Select>\n            </FormControl>\n&nbsp;\n            <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\n  GET MEDIA\n            </Button>\n          </form>\n          <div style={{ display: 'flex', justifyContent: 'space-center', flexWrap: 'wrap' }}>\n            {medias.map((media) => (\n              <div className=\"card\" key={media.id}>\n                { media.videos && (\n                <div>\n                  <ReactPlayer\n                    url={media.videos.small.url}\n                    className=\"react-player\"\n                    playing\n                    width=\"100%\"\n                    height=\"100%\"\n                  />\n                </div>\n                ) }\n                <div>{media.tags}</div>\n              </div>\n            ))}\n          </div>\n          <br />\n          <br />\n          <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\n            <Button color=\"primary\">\n              <Link href=\"https://pixabay.com/api/docs/\" color=\"inherit\">\n                <b>Pixabay API</b>\n: https://pixabay.com/api/docs/\n              </Link>\n            </Button>\n          </AppBar>\n        </>\n      );\n    }\n}\nexport default Media;\n","/* eslint-disable react/jsx-indent */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n  TextField, Fab, Card, CardHeader, CardContent, Typography, AppBar, Button, Link,\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst API_KEY = `${process.env.REACT_APP_API_KEY}`;\n\nclass Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorMessage: false, cardShow: false };\n  }\n\n  // Disappear error message after 3000sec.\n  componentDidUpdate() {\n    setTimeout(() => this.setState({ errorMessage: '' }), 3000);\n  }\n\n    getWeather = (e) => {\n      e.preventDefault();\n      const city = e.target.elements.city.value;\n      const country = e.target.elements.country.value;\n\n      axios.get(`https://cors-anywhere.herokuapp.com/http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`)\n        .then((response) => {\n          if (city && country) {\n            this.setState({\n              // weather: response.data,\n              city: response.data.name,\n              country: response.data.sys.country,\n              temp: response.data.main.temp,\n              tempMin: response.data.main.temp_min,\n              tempMax: response.data.main.temp_max,\n              description: response.data.weather[0].description,\n              icon: response.data.weather[0].icon,\n              errorMessage: false,\n              cardShow: true,\n            });\n          } else {\n            this.setState({\n              errorMessage: true,\n              cardShow: false,\n            });\n          }\n        })\n        .catch((error) => {\n          if (error.response.status === 404) {\n            this.setState({\n              errorMessage:\n                            'Weather with the supplied city and country does not exist. Please enter valid city and country',\n            });\n          } else if (error.response.status === 401) {\n            this.setState({\n              errorMessage:\n                            'Unauthorized user. Please provide valid API_KEY.',\n            });\n          }\n        });\n      e.target.reset(); // making input empty\n    }\n\n    render() {\n      const { errorMessage } = this.state;\n      const { cardShow } = this.state;\n      const { city } = this.state;\n      const { country } = this.state;\n      const { description } = this.state;\n      const { temp } = this.state;\n      const { tempMin } = this.state;\n      const { tempMax } = this.state;\n      const { icon } = this.state;\n      return (\n        <>\n        <br />\n          <form onSubmit={this.getWeather}>\n            <TextField id=\"filled-basic\" label=\"city\" variant=\"filled\" name=\"city\" placeholder=\"e.g. London\" />\n            {' '}\n            <TextField id=\"filled-basic\" label=\"country\" variant=\"filled\" name=\"country\" placeholder=\"e.g. UK\" />\n            {' '}\n            <Fab type=\"submit\" color=\"primary\" aria-label=\"add\"><AddIcon /></Fab>\n          </form>\n          <br />\n          <div className=\"warning\">{errorMessage}</div>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            {cardShow\n                    && (\n                    <div>\n                      <Card style={{\n                        width: 300,\n                      }}\n                      >\n                        <CardHeader\n                          title={city}\n                          subheader={country}\n                        />\n                        <CardContent>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            <img src={`http://openweathermap.org/img/w/${icon}.png`} alt=\"wthr img\" width=\"200px\" />\n                          </Typography>\n                          <b>{description}</b>\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <p>\n                              <b>Temperature: </b>\n                              {temp}\n                            </p>\n                            <p>\n                              <b>MIN Temperature: </b>\n                              {tempMin}\n                            </p>\n                            <p>\n                              <b>MAX Temperature: </b>\n                              {tempMax}\n                            </p>\n                          </Typography>\n                        </CardContent>\n                      </Card>\n                    </div>\n                    )}\n          </div>\n          <br />\n          <br />\n          <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\n            <Button color=\"primary\">\n              <Link href=\"https://openweathermap.org/api\" color=\"inherit\">\n                <b>Weather API</b>\n: https://openweathermap.org/api\n              </Link>\n            </Button>\n          </AppBar>\n        </>\n      );\n    }\n}\n\nexport default Weather;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport {\n  TextField, AppBar, Button, Link,\n} from '@material-ui/core';\n\nexport default class Recipes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { recipes: [] };\n  }\n\n  // http://www.recipepuppy.com/api/?i=onions,garlic&q=omelet&p=3\n  getRecipe = (e) => {\n    e.preventDefault();\n    const ingredient = e.target.elements.ingredient.value;\n    if (ingredient) {\n      axios\n        .get(\n          `https://cors-anywhere.herokuapp.com/http://www.recipepuppy.com/api/?i=${ingredient}`,\n        ) // https://cors-anywhere.herokuapp.com/ is used to remove error Cross-Origin Read Blocking (CORB)\n        .then((response) => {\n          this.setState({\n            recipes: response.data.results,\n          });\n        });\n    }\n    e.target.reset(); // making input empty\n  };\n\n  render() {\n    const { recipes } = this.state;\n    return (\n      <>\n        <Helmet><title>Recipe</title></Helmet>\n        <form onSubmit={this.getRecipe}>\n          <TextField id=\"standard-basic\" name=\"ingredient\" label=\"Ingredient\" placeholder=\"e.g.fish\" />\n          <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\n  GET RECIPE\n          </Button>\n        </form>\n        <div style={{ display: 'flex', justifyContent: 'space-center', flexWrap: 'wrap' }}>\n          {recipes.map((recipe) => (\n            <div className=\"card\" key={recipe.id}>\n              <div><a href={`${recipe.href}`} rel=\"noopener noreferrer\"><img src={recipe.thumbnail} alt=\"recipe\" style={{ width: '100%', height: '100%' }} /></a></div>\n              <div><a href={`${recipe.href}`} rel=\"noopener noreferrer\">{recipe.title}</a></div>\n              <div>{recipe.ingredients}</div>\n            </div>\n          ))}\n        </div>\n        <br />\n        <br />\n        <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\n          <Button color=\"primary\">\n            <Link href=\"http://www.recipepuppy.com/about/api/\" color=\"inherit\">\n              <b>Recipe Puppy API</b>\n               : http://www.recipepuppy.com/about/api/\n            </Link>\n          </Button>\n        </AppBar>\n      </>\n    );\n  }\n}\n","/* eslint-disable max-len */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport {\n  TextField, Paper, Typography, Card, CardActionArea, CardActions, CardContent, CardMedia, AppBar, Button, Link,\n} from '@material-ui/core';\n\nclass githubusers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { errorMessage: false, cardShow: false };\n  }\n\n  // Disappear error message after 2000sec.\n  componentDidUpdate() {\n    setTimeout(() => this.setState({ errorMessage: '' }), 2000);\n  }\n\n    // Form button function\n    // getUser(e) {\n    getUser = (e) => {\n      e.preventDefault();\n      const login = e.target.elements.login.value;\n      axios\n        .get(\n          `https://api.github.com/users/${login}`,\n        )\n        .then((response) => {\n          if (login) {\n            this.setState({\n              // users: response.data,\n              login: response.data.login, // showing login on webpage\n              name: response.data.name, // showing name on webpage,\n              avatarUrl: response.data.avatar_url,\n              htmlUrl: response.data.html_url,\n              publicRepos: response.data.public_repos,\n              location: response.data.location,\n              followers: response.data.followers,\n              errorMessage: false,\n              cardShow: true,\n            });\n          } else {\n            this.setState({\n              errorMessage: true,\n            });\n          }\n        })\n        .catch(() => {\n          this.setState({\n            errorMessage:\n                        'Username does not exist. Please enter valid username',\n          });\n        });\n      e.target.reset(); // making input empty\n    };\n\n    render() {\n      const { errorMessage } = this.state;\n      const { cardShow } = this.state;\n      const { avatarUrl } = this.state;\n      const { login } = this.state;\n      const { name } = this.state;\n      const { location } = this.state;\n      const { htmlUrl } = this.state;\n      const { publicRepos } = this.state;\n      const { followers } = this.state;\n\n      return (\n        <>\n          <Helmet><title>Githubusers</title></Helmet>\n          <br />\n          {/* <form onSubmit={this.getUser.bind(this)}> */}\n          <form onSubmit={this.getUser}>\n            <TextField id=\"outlined-basic\" variant=\"outlined\" name=\"login\" label=\"GitHub Username\" placeholder=\"e.g. mojombo\" />\n            <Button style={{ margin: '15px' }} type=\"submit\" variant=\"contained\" color=\"primary\" disableElevation>\n  GET USER\n              </Button>\n            {/* Displaying error messages */}\n            <Paper>\n              <Typography variant=\"h6\">\n                {errorMessage}\n              </Typography>\n            </Paper>\n          </form>\n          <br />\n          {/* Displaying card contents */}\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            {cardShow\n                    && (\n                    <Card style={{\n                      width: 300,\n                    }}\n                    >\n                      <CardActionArea>\n                        <CardMedia\n                          style={{ height: 300 }}\n                          image={avatarUrl}\n                        />\n                        <CardContent>\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {login}\n                          </Typography>\n                          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            <div>\n                              <b>Name:</b>\n                              {name}\n                            </div>\n                            <div>\n                              <b>Location:</b>\n                              {' '}\n                              {location}\n                            </div>\n                            <div>\n                              <b>GitHhb url:</b>\n                              <a href={`${htmlUrl}`} rel=\"noopener noreferrer\">\n                                {' '}\n                                {/* use noopener noreferrer for target=\"_blank\" */}\n                                {htmlUrl}\n                              </a>\n                            </div>\n                          </Typography>\n                        </CardContent>\n                      </CardActionArea>\n                      <CardActions>\n                        <b>Repositories: </b>\n                        {publicRepos}\n                        <b>Followers: </b>\n                        {' '}\n                        {followers}\n                      </CardActions>\n                    </Card>\n                    )}\n          </div>\n          <br />\n          <br />\n          <AppBar position=\"fixed\" color=\"default\" style={{ top: 'auto', bottom: 0 }}>\n            <Button color=\"primary\">\n              <Link href=\"https://developer.github.com/v3/\" color=\"inherit\">\n                <b>GitHub users API</b>\n: https://developer.github.com/v3/\n              </Link>\n            </Button>\n          </AppBar>\n        </>\n      );\n    }\n}\n\nexport default githubusers;\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport {\n  AppBar, Toolbar, IconButton, Button, Typography,\n} from '@material-ui/core';\nimport Media from './components/Media';\nimport Weather from './components/Weather';\nimport Recipes from './components/Recipes';\nimport Githubusers from './components/Githubusers';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <AppBar position=\"static\">\n        <Typography variant=\"h5\" color=\"secondary\">\n            API CARDS\n            </Typography>\n          <Toolbar style={{ display: 'flex', justifyContent: 'center' }}>\n            \n            <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" />\n            <Button color=\"inherit\" component={Link} to=\"/\">GitHub</Button>\n            <Button color=\"inherit\" component={Link} to=\"/recipes\">Recipes</Button>\n            <Button color=\"inherit\" component={Link} to=\"/weather\">Weather</Button>\n            <Button color=\"inherit\" component={Link} to=\"/media\">Media</Button>\n          </Toolbar>\n        </AppBar>\n        <Route exact path=\"/\" component={Githubusers} />\n        <Route exact path=\"/recipes\" component={Recipes} />\n        <Route exact path=\"/weather\" component={Weather} />\n        <Route exact path=\"/media\" component={Media} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}